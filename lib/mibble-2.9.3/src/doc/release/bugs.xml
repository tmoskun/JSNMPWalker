<doc>
  <head>
    <title>Mibble TODO-List</title>
  </head>

  <body>

    <h1>Known Issues</h1>

    <p>This is a list of the known issues as of the release of version
    <param name="version" /> (<param name="date" />). The most
    up-to-date version of this list is available from the
    <ref url="http://github.com/cederberg/mibble/issues">project
    issue tracker</ref>.</p>

    <list>
      <item>
        <text>There are currently no known issues.</text>
      </item>
    </list>


    <h1>Suggested Improvements</h1>

    <p>This is a list of the suggested improvements as of the release
    of version <param name="version" /> (<param name="date" />). The
    most up-to-date version of this list is available from the
    <ref url="http://github.com/cederberg/mibble/issues">project
    issue tracker</ref>.</p>

    <list>
      <item>
        <title>Error recovery for missing imports</title>
        <text>Mibble fails to load MIB files referencing symbols from
        other MIBs not imported. Mibble should provide a fallback for
        this, reporting a warning and loading the proper symbol.
        <ref issue="2" /></text>
      </item>

      <item>
        <title>SNMP client capabilities</title>
        <text>The library currently does not provide any API for
        building an SNMP agent or client. With an API for using
        WestHawk SNMP and/or SNMP4J, a more integrated and easier
        solution could be provided. <ref issue="3" /></text>
      </item>

      <item>
        <title>Strict SMIv1 and SMIv2 parsing</title>
        <text>When parsing SMIv1 files, any usage of symbols or constructs
        from SMIv2 should trigger a warning. The opposite goes for SMIv2 files.
        <ref issue="4" /></text>
      </item>

      <item>
        <title>Object serialization</title>
        <text>There is currently no easy way to store the state of a
        loaded Mib, so the same files have to be parsed every time
        which may be time consuming. By adding object serialization or
        similar this might be faster. <ref issue="5" /></text>
      </item>
    </list>

  </body>
</doc>
